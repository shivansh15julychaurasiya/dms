{
	"info": {
		"_postman_id": "d4ed6ec1-12dc-4cbf-a7ad-04bc73838442",
		"name": "AHC : DMS",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "23289843"
	},
	"item": [
		{
			"name": "user",
			"item": [
				{
					"name": "register",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"rahul\",\n    \"email\": \"rahul@gmail.com\",\n    \"username\": \"11445\",\n    \"about\": \"artist hai\",\n    \"password\": \"1234\",\n    \"phone\": \"8815167136\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{localhost}}:{{dms_port}}/dms/auth/register",
							"host": [
								"{{localhost}}"
							],
							"port": "{{dms_port}}",
							"path": [
								"dms",
								"auth",
								"register"
							]
						},
						"description": "This is a POST request, submitting data to an API via the request body. This request submits JSON data, and the data is reflected in the response.\n\nA successful POST request typically returns a `200 OK` or `201 Created` response code."
					},
					"response": []
				},
				{
					"name": "createwithrole",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"ankit\",\n    \"email\": \"ankit@gmail.com\",\n    \"username\": \"11707\",\n    \"about\": \"translation\",\n    \"password\": \"1234\",\n    \"phone\": \"9876543210\",\n    \"roles\" : [\n        {\"role_id\" : 2}\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{localhost}}:{{dms_port}}/dms/users/create",
							"host": [
								"{{localhost}}"
							],
							"port": "{{dms_port}}",
							"path": [
								"dms",
								"users",
								"create"
							]
						},
						"description": "This is a POST request, submitting data to an API via the request body. This request submits JSON data, and the data is reflected in the response.\n\nA successful POST request typically returns a `200 OK` or `201 Created` response code."
					},
					"response": []
				},
				{
					"name": "allusers",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{localhost}}:{{dms_port}}/dms/users/",
							"host": [
								"{{localhost}}"
							],
							"port": "{{dms_port}}",
							"path": [
								"dms",
								"users",
								""
							]
						},
						"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
					},
					"response": []
				},
				{
					"name": "userprofile",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "localhost:8081/dms/users/1",
							"host": [
								"localhost"
							],
							"port": "8081",
							"path": [
								"dms",
								"users",
								"1"
							]
						},
						"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
					},
					"response": []
				},
				{
					"name": "updateuser",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful PUT request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 204]);",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"ankit singh\",\n    \"email\": \"ankit@gmail.com\",\n    \"about\": \"translator\",\n    \"username\": \"11707\",\n    \"phone\" : \"987654321\",\n    \"password\": \"1234\",\n    \"roles\": [\n        {\n            \"role_id\" : 1\n        }\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{localhost}}:{{dms_port}}/dms/users/4",
							"host": [
								"{{localhost}}"
							],
							"port": "{{dms_port}}",
							"path": [
								"dms",
								"users",
								"4"
							]
						},
						"description": "This is a PUT request and it is used to overwrite an existing piece of data. For instance, after you create an entity with a POST request, you may want to modify that later. You can do that using a PUT request. You typically identify the entity being updated by including an identifier in the URL (eg. `id=1`).\n\nA successful PUT request typically returns a `200 OK`, `201 Created`, or `204 No Content` response code."
					},
					"response": []
				},
				{
					"name": "activateuser",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful DELETE request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 202, 204]);",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{localhost}}:{{dms_port}}/dms/users/activate/11823",
							"host": [
								"{{localhost}}"
							],
							"port": "{{dms_port}}",
							"path": [
								"dms",
								"users",
								"activate",
								"11823"
							]
						},
						"description": "This is a DELETE request, and it is used to delete data that was previously created via a POST request. You typically identify the entity being updated by including an identifier in the URL (eg. `id=1`).\n\nA successful DELETE request typically returns a `200 OK`, `202 Accepted`, or `204 No Content` response code."
					},
					"response": []
				},
				{
					"name": "deactivateuser",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful DELETE request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 202, 204]);",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{localhost}}:{{dms_port}}/dms/users/deactivate/11823",
							"host": [
								"{{localhost}}"
							],
							"port": "{{dms_port}}",
							"path": [
								"dms",
								"users",
								"deactivate",
								"11823"
							]
						},
						"description": "This is a DELETE request, and it is used to delete data that was previously created via a POST request. You typically identify the entity being updated by including an identifier in the URL (eg. `id=1`).\n\nA successful DELETE request typically returns a `200 OK`, `202 Accepted`, or `204 No Content` response code."
					},
					"response": []
				}
			],
			"auth": {
				"type": "bearer",
				"bearer": [
					{
						"key": "token",
						"value": "{{jwt}}",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"packages": {},
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"packages": {},
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "roles",
			"item": [
				{
					"name": "createrole",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{vault:authorization-secret}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"role_name\": \"role_bs\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{localhost}}:{{dms_port}}/dms/role/",
							"host": [
								"{{localhost}}"
							],
							"port": "{{dms_port}}",
							"path": [
								"dms",
								"role",
								""
							]
						},
						"description": "This is a POST request, submitting data to an API via the request body. This request submits JSON data, and the data is reflected in the response.\n\nA successful POST request typically returns a `200 OK` or `201 Created` response code."
					},
					"response": []
				},
				{
					"name": "assignrole",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{localhost}}:{{dms_port}}/dms/role/assign-role?username=11448&roleId=1",
							"host": [
								"{{localhost}}"
							],
							"port": "{{dms_port}}",
							"path": [
								"dms",
								"role",
								"assign-role"
							],
							"query": [
								{
									"key": "username",
									"value": "11448"
								},
								{
									"key": "roleId",
									"value": "1"
								}
							]
						},
						"description": "This is a POST request, submitting data to an API via the request body. This request submits JSON data, and the data is reflected in the response.\n\nA successful POST request typically returns a `200 OK` or `201 Created` response code."
					},
					"response": []
				},
				{
					"name": "desassignrole",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{localhost}}:{{dms_port}}/dms/role/deassign-role?username=11448&roleId=1",
							"host": [
								"{{localhost}}"
							],
							"port": "{{dms_port}}",
							"path": [
								"dms",
								"role",
								"deassign-role"
							],
							"query": [
								{
									"key": "username",
									"value": "11448"
								},
								{
									"key": "roleId",
									"value": "1"
								}
							]
						},
						"description": "This is a POST request, submitting data to an API via the request body. This request submits JSON data, and the data is reflected in the response.\n\nA successful POST request typically returns a `200 OK` or `201 Created` response code."
					},
					"response": []
				},
				{
					"name": "allroles",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"var template = `",
									"<style type=\"text/css\">",
									"    .tftable {font-size:14px;color:#333333;width:100%;border-width: 1px;border-color: #87ceeb;border-collapse: collapse;}",
									"    .tftable th {font-size:18px;background-color:#87ceeb;border-width: 1px;padding: 8px;border-style: solid;border-color: #87ceeb;text-align:left;}",
									"    .tftable tr {background-color:#ffffff;}",
									"    .tftable td {font-size:14px;border-width: 1px;padding: 8px;border-style: solid;border-color: #87ceeb;}",
									"    .tftable tr:hover {background-color:#e0ffff;}",
									"</style>",
									"",
									"<table class=\"tftable\" border=\"1\">",
									"    <tr>",
									"        <th>Status</th>",
									"        <th>Role ID</th>",
									"        <th>Role Name</th>",
									"        <th>Created At</th>",
									"        <th>Updated At</th>",
									"    </tr>",
									"    ",
									"    {{#each response.data.content}}",
									"        <tr>",
									"            <td>{{status}}</td>",
									"            <td>{{role_id}}</td>",
									"            <td>{{role_name}}</td>",
									"            <td>{{created_at}}</td>",
									"            <td>{{updated_at}}</td>",
									"        </tr>",
									"    {{/each}}",
									"</table>",
									"`;",
									"",
									"function constructVisualizerPayload() {",
									"    return {response: pm.response.json()}",
									"}",
									"",
									"pm.visualizer.set(template, constructVisualizerPayload());"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"packages": {},
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{localhost}}:{{dms_port}}/dms/role",
							"host": [
								"{{localhost}}"
							],
							"port": "{{dms_port}}",
							"path": [
								"dms",
								"role"
							]
						},
						"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
					},
					"response": []
				},
				{
					"name": "singlerole",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{vault:authorization-secret}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "localhost:8081/dms/role/roleId/1",
							"host": [
								"localhost"
							],
							"port": "8081",
							"path": [
								"dms",
								"role",
								"roleId",
								"1"
							]
						},
						"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
					},
					"response": []
				},
				{
					"name": "byrolename",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{vault:authorization-secret}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "localhost:8081/dms/role/roleName/ROLE_ECOURT",
							"host": [
								"localhost"
							],
							"port": "8081",
							"path": [
								"dms",
								"role",
								"roleName",
								"ROLE_ECOURT"
							]
						},
						"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
					},
					"response": []
				},
				{
					"name": "disablerole",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful DELETE request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 202, 204]);",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{vault:authorization-secret}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{localhost}}:{{dms_port}}/dms/role/disable/1",
							"host": [
								"{{localhost}}"
							],
							"port": "{{dms_port}}",
							"path": [
								"dms",
								"role",
								"disable",
								"1"
							]
						},
						"description": "This is a DELETE request, and it is used to delete data that was previously created via a POST request. You typically identify the entity being updated by including an identifier in the URL (eg. `id=1`).\n\nA successful DELETE request typically returns a `200 OK`, `202 Accepted`, or `204 No Content` response code."
					},
					"response": []
				},
				{
					"name": "enablerole",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful DELETE request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 202, 204]);",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{localhost}}:{{dms_port}}/dms/role/enable/3",
							"host": [
								"{{localhost}}"
							],
							"port": "{{dms_port}}",
							"path": [
								"dms",
								"role",
								"enable",
								"3"
							]
						},
						"description": "This is a DELETE request, and it is used to delete data that was previously created via a POST request. You typically identify the entity being updated by including an identifier in the URL (eg. `id=1`).\n\nA successful DELETE request typically returns a `200 OK`, `202 Accepted`, or `204 No Content` response code."
					},
					"response": []
				}
			],
			"auth": {
				"type": "bearer",
				"bearer": [
					{
						"key": "token",
						"value": "{{jwt}}",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"packages": {},
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"packages": {},
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "security",
			"item": [
				{
					"name": "login otp (bsnl)",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://103.234.185.173/api/swsendnk.asp?username=HCALLD&pass=4yFqGgEwjbzC&sender=HCALLD&sendto=8601837554&templateID=1107168551150460623&message=OTP to login in DMS : 1234 - Allahabad High Court",
							"protocol": "http",
							"host": [
								"103",
								"234",
								"185",
								"173"
							],
							"path": [
								"api",
								"swsendnk.asp"
							],
							"query": [
								{
									"key": "username",
									"value": "HCALLD"
								},
								{
									"key": "pass",
									"value": "4yFqGgEwjbzC"
								},
								{
									"key": "sender",
									"value": "HCALLD"
								},
								{
									"key": "sendto",
									"value": "8601837554"
								},
								{
									"key": "templateID",
									"value": "1107168551150460623"
								},
								{
									"key": "message",
									"value": "OTP to login in DMS : 1234 - Allahabad High Court"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "logout",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{vault:authorization-secret}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{localhost}}:{{dms_port}}/dms/auth/logout",
							"host": [
								"{{localhost}}"
							],
							"port": "{{dms_port}}",
							"path": [
								"dms",
								"auth",
								"logout"
							]
						},
						"description": "This is a POST request, submitting data to an API via the request body. This request submits JSON data, and the data is reflected in the response.\n\nA successful POST request typically returns a `200 OK` or `201 Created` response code."
					},
					"response": []
				},
				{
					"name": "login (password)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"username\": \"11448\",\n    \"password\": \"1234\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{localhost}}:{{dms_port}}/dms/auth/login-password",
							"host": [
								"{{localhost}}"
							],
							"port": "{{dms_port}}",
							"path": [
								"dms",
								"auth",
								"login-password"
							]
						},
						"description": "This is a POST request, submitting data to an API via the request body. This request submits JSON data, and the data is reflected in the response.\n\nA successful POST request typically returns a `200 OK` or `201 Created` response code."
					},
					"response": []
				},
				{
					"name": "login (otp)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{vault:authorization-secret}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"username\": \"11823\",\n    \"otp\": \"8849\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{localhost}}:{{dms_port}}/dms/auth/login-otp",
							"host": [
								"{{localhost}}"
							],
							"port": "{{dms_port}}",
							"path": [
								"dms",
								"auth",
								"login-otp"
							]
						},
						"description": "This is a POST request, submitting data to an API via the request body. This request submits JSON data, and the data is reflected in the response.\n\nA successful POST request typically returns a `200 OK` or `201 Created` response code."
					},
					"response": []
				},
				{
					"name": "verify-otp (reset)",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\" : \"11448\",\n    \"otp\": \"4359\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{localhost}}:{{dms_port}}/dms/auth/verify-reset-otp",
							"host": [
								"{{localhost}}"
							],
							"port": "{{dms_port}}",
							"path": [
								"dms",
								"auth",
								"verify-reset-otp"
							]
						}
					},
					"response": []
				},
				{
					"name": "verify-otp (forgot)",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\" : \"11448\",\n    \"otp\": \"1181\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{localhost}}:{{dms_port}}/dms/auth/verify-forgot-otp",
							"host": [
								"{{localhost}}"
							],
							"port": "{{dms_port}}",
							"path": [
								"dms",
								"auth",
								"verify-forgot-otp"
							]
						}
					},
					"response": []
				},
				{
					"name": "verify-otp (login)",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\" : \"11448\",\n    \"otp\": \"1181\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{localhost}}:{{dms_port}}/dms/auth/login-otp",
							"host": [
								"{{localhost}}"
							],
							"port": "{{dms_port}}",
							"path": [
								"dms",
								"auth",
								"login-otp"
							]
						}
					},
					"response": []
				},
				{
					"name": "request-otp (reset)",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\" : \"11448\",\n    \"otp_type\" :  \"Reset\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{localhost}}:{{dms_port}}/dms/auth/request-otp",
							"host": [
								"{{localhost}}"
							],
							"port": "{{dms_port}}",
							"path": [
								"dms",
								"auth",
								"request-otp"
							]
						}
					},
					"response": []
				},
				{
					"name": "request-otp (login)",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\" : \"11448\",\n    \"otp_type\" :  \"Login\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{localhost}}:{{dms_port}}/dms/auth/request-otp",
							"host": [
								"{{localhost}}"
							],
							"port": "{{dms_port}}",
							"path": [
								"dms",
								"auth",
								"request-otp"
							]
						}
					},
					"response": []
				},
				{
					"name": "request-otp (forgot)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"username\": \"11448\",\n    \"otp_type\": \"Forgot\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{localhost}}:{{dms_port}}/dms/auth/request-otp",
							"host": [
								"{{localhost}}"
							],
							"port": "{{dms_port}}",
							"path": [
								"dms",
								"auth",
								"request-otp"
							]
						},
						"description": "This is a POST request, submitting data to an API via the request body. This request submits JSON data, and the data is reflected in the response.\n\nA successful POST request typically returns a `200 OK` or `201 Created` response code."
					},
					"response": []
				}
			]
		},
		{
			"name": "utils",
			"item": [
				{
					"name": "swagger",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{localhost}}:{{dms_port}}/v3/api-docs",
							"host": [
								"{{localhost}}"
							],
							"port": "{{dms_port}}",
							"path": [
								"v3",
								"api-docs"
							]
						},
						"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
					},
					"response": []
				},
				{
					"name": "acutator-health",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{localhost}}:{{dms_port}}/actuator/health",
							"host": [
								"{{localhost}}"
							],
							"port": "{{dms_port}}",
							"path": [
								"actuator",
								"health"
							]
						}
					},
					"response": []
				},
				{
					"name": "actuator-bean",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{localhost}}:{{dms_port}}/actuator/shutdown",
							"host": [
								"{{localhost}}"
							],
							"port": "{{dms_port}}",
							"path": [
								"actuator",
								"shutdown"
							]
						}
					},
					"response": []
				},
				{
					"name": "actuator-mappings",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{localhost}}:{{dms_port}}/actuator/mappings",
							"host": [
								"{{localhost}}"
							],
							"port": "{{dms_port}}",
							"path": [
								"actuator",
								"mappings"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "case_file",
			"item": [
				{
					"name": "getfile",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{localhost}}:{{dms_port}}/dms/cfd/1",
							"host": [
								"{{localhost}}"
							],
							"port": "{{dms_port}}",
							"path": [
								"dms",
								"cfd",
								"1"
							]
						}
					},
					"response": []
				}
			],
			"auth": {
				"type": "bearer",
				"bearer": [
					{
						"key": "token",
						"value": "{{jwt}}",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"packages": {},
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"packages": {},
						"exec": [
							""
						]
					}
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "localhost",
			"value": "localhost"
		},
		{
			"key": "dms_port",
			"value": "8081"
		},
		{
			"key": "jwt",
			"value": "eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiIxMTQ0OCIsImlhdCI6MTc0NzYzMTY1MCwiZXhwIjoxNzQ3NjY3NjUwfQ.PTVp1eeNaMVkGLRvJWbCuKBFdadIEpz6ly5rTE135YTE7M-7teROf-Ut5_LrITbp1cLt_VekXd9tZeegl64gvA",
			"type": "string"
		}
	]
}